AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ShogiProject

  Shogi game record management system with HADS framework


Parameters:
  DEBUG:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Set to true to enable debug mode for the Lambda function.'
  UseMock:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Set to true to use mock data instead of real data in the Lambda function.'
  NoAuth:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Set to true to allow unconditional login without authentication.'
  DenySignup:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Set to true to deny signup during maintenance.'
  DenyLogin:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Set to true to deny login during maintenance.'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Tracing: Active
    MemorySize: 512
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
  Api:
    TracingEnabled: true
Resources:
  MainAPIGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: 'api-sgp-main'
      StageName: 'stage-01'
      EndpointConfiguration: REGIONAL
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: 'lambda-sgp-main'
      CodeUri: Lambda/
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Role: !GetAtt LambdaExecutionRole.Arn
      LoggingConfig:
        LogFormat: JSON
      Events:
        ApiRoot:
          Type: Api
          Properties:
            Path: '/'
            Method: ANY
            RestApiId: !Ref MainAPIGateway
        ApiProxy:
          Type: Api
          Properties:
            Path: '/{proxy+}'
            Method: ANY
            RestApiId: !Ref MainAPIGateway
      Environment:
        Variables:
          HADS_DEBUG: !Ref DEBUG
          HADS_USE_MOCK: !Ref UseMock
          HADS_NO_AUTH: !Ref NoAuth
          HADS_DENY_SIGNUP: !Ref DenySignup
          HADS_DENY_LOGIN: !Ref DenyLogin
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'role-sgp-lambda-exec'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonCognitoPowerUser"
      Policies:
        - PolicyName: "policy-sgp-lambda-exec"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:GetParameter"
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                  - "sqs:getQueueAttributes"
                  - "sqs:sendMessage"
                Resource: "*"
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ShogiProjectApi:
    Description: API Gateway endpoint URL for Prod stage for ShogiProject function
    Value: !Sub "https://${MainAPIGateway}.execute-api.${AWS::Region}.amazonaws.com/stage-01/"
